// file generated by Boa Constructor from input by Jimmy

package boaconstructor

import (
	"fmt"
	"io"
	"os"

	"github.com/westarver/boa"
	"github.com/westarver/boa-constructor/appdata"
)

// jsonBytes contains all of the commands and flags recognized by
// this app. Calling boa.FromJSON(jsonBytes(), os.Args) returns the
// map of command line items actually passed to this app instance.
func jsonBytes() []byte {
	return []byte(`{"commands":[{"Id":-1,"Name":"BOA-APP-DATA","Alias":"boa-constructor","ParamType":0,"ParamCount":0,"ShortHelp":"help","LongHelp":"Jimmy","Errors":null,"Value":"boaconstructor","DefaultValue":"github.com/westarver/boa-constructor","IsDefault":false,"IsFlag":false,"IsExclusive":false,"IsParamOpt":false,"IsRequired":false,"IsDeleted":false,"RunCode":"Go code to start your app, get and evaluate the commands received, \nand implement the help command can be generated from the GUI. The \ncurrent implementation creates three source files, main.go, runner.go \nand help.go.","ParName":"","ChNames":null},{"Id":0,"Name":"--gui","Alias":"-g","ParamType":0,"ParamCount":0,"ShortHelp":"gui causes boa constructor to generate Gui friendly help and run schemes","LongHelp":"","Errors":null,"Value":null,"DefaultValue":"","IsDefault":false,"IsFlag":true,"IsExclusive":false,"IsParamOpt":false,"IsRequired":false,"IsDeleted":false,"RunCode":"appdata.GlobalData.IsGui = gui","ParName":"","ChNames":null},{"Id":1,"Name":"--mdhelp","Alias":"-m","ParamType":0,"ParamCount":0,"ShortHelp":"mdhelp is a boolean command to cause help generation to generate markdown content.","LongHelp":"","Errors":null,"Value":null,"DefaultValue":"","IsDefault":false,"IsFlag":true,"IsExclusive":false,"IsParamOpt":false,"IsRequired":false,"IsDeleted":false,"RunCode":"appdata.GlobalData.MdHelp = mdhelp","ParName":"","ChNames":null},{"Id":2,"Name":"file","Alias":"","ParamType":13,"ParamCount":1,"ShortHelp":"open a .json file to start the session.","LongHelp":"","Errors":null,"Value":null,"DefaultValue":"","IsDefault":false,"IsFlag":false,"IsExclusive":false,"IsParamOpt":false,"IsRequired":false,"IsDeleted":false,"RunCode":"appdata.GlobalData.LoadedPath = file","ParName":"","ChNames":null}]}`)
}

func Runcli(w io.Writer) int {
	cli := boa.FromJSON(jsonBytes(), os.Args)
	if cli == nil {
		fmt.Fprintf(w, "%s\n", "unable to obtain cli object")
		return -1
	}

	// gui causes boa constructor to generate Gui friendly help and run schemes
	gui, guiExist := cli.Bool("--gui")
	if guiExist {
		appdata.GlobalData.IsGui = gui
	}

	// mdhelp is a boolean command to cause help generation to generate markdown content.
	mdhelp, mdhelpExist := cli.Bool("--mdhelp")
	if mdhelpExist {
		appdata.GlobalData.MdHelp = mdhelp
	}

	// open a .json file to start the session.
	file, fileExist := cli.Path("file")
	if fileExist {
		appdata.GlobalData.LoadedPath = file
	}
	return 0
}
